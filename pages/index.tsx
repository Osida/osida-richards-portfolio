import Head from 'next/head';
import {GetServerSideProps} from "next";
import data from "../data";
import {sanity} from "../lib";
import {About, Contact, Header, Navbar, Skills, Work} from "../layouts";

const {client} = sanity
const {query} = data

export interface IProps {
    abouts: { status: string, value: SanityDoc.Abouts[] },
    works: { status: string, value: SanityDoc.Works[] },
    skills: { status: string, value: SanityDoc.Skills[] },
}

const Home = ({abouts, works, skills}: IProps) => {
    return (
        <div className={'w-full h-full bg-primary scroll-smooth'}>
            <Head>
                <title>Osida Richards</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <Navbar/>
            <main className={'w-full h-full'}>
                <Header/>
                <About data={abouts.value}/>
                <Work data={works.value}/>
                <Skills data={skills.value}/>
            </main>
            <Contact/>
        </div>
    )
}

export default Home


export const getServerSideProps: GetServerSideProps = async () => {
    try {
        const [abouts, works, skills] = await Promise.allSettled([
            client(process.env.SANITY_TOKEN).fetch(query.sanity.abouts).then(res => JSON.parse(JSON.stringify(res))),
            client(process.env.SANITY_TOKEN).fetch(query.sanity.works).then(res => JSON.parse(JSON.stringify(res))),
            client(process.env.SANITY_TOKEN).fetch(query.sanity.skills).then(res => JSON.parse(JSON.stringify(res)))
        ])
        console.log('SSR props success')
        return {props: {abouts, works, skills},}
    } catch (error) {
        console.error('SSR error!')
        console.error(JSON.stringify(error))
        return {props: {}}
    }
}